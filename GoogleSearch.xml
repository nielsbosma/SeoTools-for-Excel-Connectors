<?xml version="1.0" encoding="utf-8" ?>

<Suite RequireVersion="7.0.2" Title="Google Search" Category="SEO" Id="GoogleSearch" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/GoogleSearch.xml" HelpUrl="http://seotoolsforexcel.com/Google-Search/" HelpText="Documentation">

  <Author Name="Victor Sandberg" Url="http://community.seotoolsforexcel.com/users/diskborste/activity" />

  <Resources>
    <Resource Id="Periods">
      <Item Id="anytime" Title="Anytime"/>
      <Item Id="h" Title="Last Hour"/>
      <Item Id="d" Title="Last Day"/>
      <Item Id="w" Title="Last Week"/>
      <Item Id="m" Title="Last Month"/>
      <Item Id="y" Title="Last Year"/>
      <Item Id="custom" Title="Custom (Select Interval Below)"/>
    </Resource>
    <Resource Id="FileTypes">
      <Item Id="all" Title="All File Types"/>
      <Item Id="swf" Title="Adobe Flash (.swf)"/>
      <Item Id="pdf" Title="Adobe Portable Document Format (.pdf)"/>
      <Item Id="ps" Title="Adobe PostScript (.ps)"/>
      <Item Id="dwf" Title="Autodesk Design Web Format (.dwf)"/>
      <Item Id="kml" Title="Google Earth (.kml)"/>
      <Item Id="kmz" Title="Google Earth (.kmz)"/>
      <Item Id="gpx" Title="GPS eXchange Format (.gpx)"/>
      <Item Id="hwp" Title="Hancom Hanword (.hwp)"/>
      <Item Id="htm" Title="HTML (.htm)"/>
      <Item Id="html" Title="HTML (.html)"/>
      <Item Id="xls" Title="Microsoft Excel (.xls)"/>
      <Item Id="xlsx" Title="Microsoft Excel (.xlsx)"/>
      <Item Id="ppt" Title="Microsoft PowerPoint (.ppt)"/>
      <Item Id="pptx" Title="Microsoft PowerPoint (.pptx)"/>
      <Item Id="doc" Title="Microsoft Word (.doc)"/>
      <Item Id="docx" Title="Microsoft Word (.docx)"/>
      <Item Id="odp" Title="OpenOffice presentation (.odp)"/>
      <Item Id="odt" Title="OpenOffice text (.odt)"/>
      <Item Id="rtf" Title="Rich Text Format (.rtf)"/>
      <Item Id="svg" Title="Scalable Vector Graphics (.svg"/>
      <Item Id="tex" Title="TeX/LaTeX (.tex)"/>
      <Item Id="txt" Title="Standard text file (.txt)"/>
      <Item Id="text" Title="Standard text file (.text)"/>
      <Item Id="bas" Title="Basic source code (.bas)"/>
      <Item Id="cs" Title="C# source code (.cs)"/>
      <Item Id="c" Title="C/C++ source code (.c)"/>
      <Item Id="cc" Title="C/C++ source code (.cc)"/>
      <Item Id="cpp" Title="C/C++ source code (.cpp)"/>
      <Item Id="cxx" Title="C/C++ source code (.cxx)"/>
      <Item Id="h" Title="C/C++ source code (.h)"/>
      <Item Id="hpp" Title="C/C++ source code (.hpp)"/>
      <Item Id="java" Title="Java source code (.java)"/>
      <Item Id="pl" Title="Perl source code (.pl)"/>
      <Item Id="py" Title="Python source code (.py)"/>
      <Item Id="wml" Title="Wireless Markup Language (.wml)"/>
      <Item Id="wap" Title="Wireless Markup Language (.wap)"/>
      <Item Id="xml" Title="XML (.xml)"/>
    </Resource>
  </Resources>

  <RestConnector Id="SearchResults" Title="Search Results">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="zlatan" Required="true"/>
      <Radio Id="SearchIn" Title="Search In" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="intext:" Title="Text"/>
          <Item Id="intitle:" Title="Title"/>
          <Item Id="inurl:" Title="URL"/>
        </DataSource>
      </Radio>
      <Text Id="Domain" Title="Domain (Can't be combined with 'Search In')" Debug.DefaultValue="" Required="false" HelpText="Filter Results by specific Domain"/>
      <Select Id="File" Title="File Type (Can't be combined with 'Search In')" Required="false" DefaultValue="all">
        <DataSource>
          <Resource Id="FileTypes"/>
        </DataSource>
      </Select>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Radio Id="PeriodSorting" Title="Sort Period Search" DefaultValue="relevance" Required="false">
        <DataSource>
          <Item Id="relevance" Title="Relevance"/>
          <Item Id="date" Title="Date"/>
        </DataSource>
      </Radio>
      <Text Id="Site" Title="Google Site" DefaultValue="google.com" Required="true"/>
    </Parameters>
    <Paging PageSize="10" EvenPages="False"/>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://@(Model.Site)/search?
        hl=en&safe=off&q=
        @if(Model.Query.Contains(" ") && Model.SearchIn != "all")
        {
          @: all@(Model.SearchIn)
        }
        else if(Model.SearchIn != "all")
        {
          @(Model.SearchIn)
        }
        @Utils.UrlEncode(Model.Query)
        @if(!string.IsNullOrEmpty(Model.Domain) && Model.SearchIn == "all")
        {
          @: +site:@Utils.UrlEncode(Utils.UrlProperty(Model.Domain).Domain)
        }
        @if(Model.File != "all" && Model.SearchIn == "all")
        {
          @: +filetype:@(Model.File)
        }
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &tbs=cdr:1,cd_min:@Utils.UrlEncode(((DateTime)Model.DateInterval.StartDate).ToString("MM/dd/yyyy")),cd_max:@Utils.UrlEncode(((DateTime)Model.DateInterval.EndDate).ToString("MM/dd/yyyy"))
        }
        @if(Model.PeriodSorting == "date")
        {
          @: ,sbd:1
        }
        @if(Model.PageCursor.Page != 0)
        {
          @: &start=@(Model.PageCursor.FetchedRows+1)
        }
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="1500" RandomTo="2000" IfSame="Host"/>
        <RequestHeaders>
          <Header Name='Cache-Control'><![CDATA[no-cache]]></Header>
          <Header Name='User-Agent'><![CDATA[Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <XPath Expr="//h3[@@class='r']/a">
        <Xpath Expr="." Id="Title" Converter="String"/>
      </XPath>
      <XPath Expr="//span[@@class='st'] | //div[@@class='st']">
        <Xpath Expr="." Id="Description" Converter="String"/>
      </XPath>
      <XPath Expr="//h3[@@class='r']/a">
        <Compute Id="URL" Title="URL" Converter="String">
          <Compute.Expr>
            <![CDATA[
              @{
                string decodedUrl = Uri.UnescapeDataString(Model.UrlRaw);
              }
              @decodedUrl
            ]]>
          </Compute.Expr>
          <Xpath Expr="." Attribute="href" Id="UrlRaw" Converter="String"/>
        </Compute>
      </XPath>
    </Parse>
  </RestConnector>

  <RestConnector Id="NumberOfResults" Title="Number of Results" HelpText="Returns Number Search Results">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="zlatan" Required="true"/>
      <Radio Id="SearchIn" Title="Search In" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="intext:" Title="Text"/>
          <Item Id="intitle:" Title="Title"/>
          <Item Id="inurl:" Title="URL"/>
        </DataSource>
      </Radio>
      <Text Id="Domain" Title="Domain" Debug.DefaultValue="" Required="false" HelpText="Filter Results by specific Domain"/>
      <Select Id="File" Title="File Type (Can't be combined with 'Search In')" Required="false" DefaultValue="all">
        <DataSource>
          <Resource Id="FileTypes"/>
        </DataSource>
      </Select>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Text Id="Site" Title="Google Site" DefaultValue="google.com" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://@(Model.Site)/search?
        hl=en&safe=off&q=
        @if(Model.Query.Contains(" ") && Model.SearchIn != "all")
        {
          @: all@(Model.SearchIn)
        }
        else if(Model.SearchIn != "all")
        {
          @(Model.SearchIn)
        }
        @Utils.UrlEncode(Model.Query)
        @if(!string.IsNullOrEmpty(Model.Domain) && Model.SearchIn == "all")
        {
          @: +site:@Utils.UrlEncode(Utils.UrlProperty(Model.Domain).Domain)
        }
        @if(Model.File != "all" && Model.SearchIn == "all")
        {
          @: +filetype:@(Model.File)
        }
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &tbs=cdr:1,cd_min:@Utils.UrlEncode(((DateTime)Model.DateInterval.StartDate).ToString("MM/dd/yyyy")),cd_max:@Utils.UrlEncode(((DateTime)Model.DateInterval.EndDate).ToString("MM/dd/yyyy"))
        }
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="500" RandomTo="1000" IfSame="Host"/>
        <RequestHeaders>
          <Header Name='Cache-Control'><![CDATA[no-cache]]></Header>
          <Header Name='User-Agent'><![CDATA[Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <XPath Expr="//div[@@id='resultStats']/text()" Converter="Int"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="DomainIndexedPages" Title="Domain Indexed Pages" HelpText="Returns Number of Indexed pages">
    <Parameters>
      <Text Id="Url" Title="URL" Required="true" Debug.DefaultValue="aftonbladet.se"/>
      <Select Id="File" Title="File Type (Can't be combined with 'Search In')" Required="false" DefaultValue="all">
        <DataSource>
          <Resource Id="FileTypes"/>
        </DataSource>
      </Select>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Text Id="Site" Title="Google Site" DefaultValue="google.com" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://@(Model.Site)/search?
        hl=en&safe=off&q=site:@Utils.UrlEncode(Utils.UrlProperty(Model.Url).Domain)
        @if(Model.File != "all")
        {
          @: +filetype:@(Model.File)
        }
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &tbs=cdr:1,cd_min:@Utils.UrlEncode(((DateTime)Model.DateInterval.StartDate).ToString("MM/dd/yyyy")),cd_max:@Utils.UrlEncode(((DateTime)Model.DateInterval.EndDate).ToString("MM/dd/yyyy"))
        }
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="1500" RandomTo="2000" IfSame="Host"/>
        <RequestHeaders>
          <Header Name='Cache-Control'><![CDATA[no-cache]]></Header>
          <Header Name='User-Agent'><![CDATA[Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <XPath Expr="//div[@@id='resultStats']/text()" Converter="Int"/>
    </Parse>
  </RestConnector>

  <RestConnector Id="Ads" Title="Ads">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="cheap hotels" Required="true"/>
      <Radio Id="SearchIn" Title="Search In" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="intext:" Title="Text"/>
          <Item Id="intitle:" Title="Title"/>
          <Item Id="inurl:" Title="URL"/>
        </DataSource>
      </Radio>
      <Text Id="Domain" Title="Domain (Can't be combined with 'Search In')" Debug.DefaultValue="" Required="false" HelpText="Filter Results by specific Domain"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Text Id="Site" Title="Google Site" DefaultValue="google.com" Required="true"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://@(Model.Site)/search?
        hl=en&safe=off&q=
        @if(Model.Query.Contains(" ") && Model.SearchIn != "all")
        {
          @: all@(Model.SearchIn)
        }
        else if(Model.SearchIn != "all")
        {
          @(Model.SearchIn)
        }
        @Utils.UrlEncode(Model.Query)
        @if(!string.IsNullOrEmpty(Model.Domain) && Model.SearchIn == "all")
        {
          @: +site:@Utils.UrlEncode(Utils.UrlProperty(Model.Domain).Domain)
        }
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &tbs=cdr:1,cd_min:@Utils.UrlEncode(((DateTime)Model.DateInterval.StartDate).ToString("MM/dd/yyyy")),cd_max:@Utils.UrlEncode(((DateTime)Model.DateInterval.EndDate).ToString("MM/dd/yyyy"))
        }
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="1500" RandomTo="2000" IfSame="Host"/>
        <RequestHeaders>
          <Header Name='Cache-Control'><![CDATA[no-cache]]></Header>
          <Header Name='User-Agent'><![CDATA[Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0]]></Header>
        </RequestHeaders>
      </HttpSettings>
    </Fetch>
    <Parse>
      <XPath Expr="//li[@@class='ads-ad']/h3">
        <Xpath Expr="." Id="Title" Title="Title" Converter="String"/>
      </XPath>
      <XPath Expr="//div[@@class='ellip ads-creative']">
        <Xpath Expr="." Id="Description" Title="Description" Converter="String"/>
      </XPath>
      <XPath Expr="//div[@@class='ads-visurl']/cite">
        <Xpath Expr="." Id="Url" Title="URL" Converter="String"/>
      </XPath>
    </Parse>
  </RestConnector>

</Suite>
