<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Programming" Title="GitHub" Id="GitHub" RequireVersion="8.0" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/GitHub.xml" HelpUrl="http://seotoolsforexcel.com/github/">

  <Author Name="Dovydas Meilunas" Url="https://github.com/dovydasm"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/github/">
    <Text Id="Username" Title="Username" Required="true" HelpUrl="http://seotoolsforexcel.com/github/"/>
    <Text Id="AccessToken" Title="Personal access token" Required="true" HelpUrl="http://seotoolsforexcel.com/github/"/>
  </Settings>

  <Resources>
    <Resource Id="Headers">
      <HttpSettings>
        <RequestHeaders>
          <Header Name="Authorization">Basic @(CreateBasicAuth())</Header>
          <Header Name="Accept">application/vnd.github.v3+json</Header>
        </RequestHeaders>
      </HttpSettings>
    </Resource>
    <Resource Id="Fail">
      <Fail>
        <JsonPath Expr="$.message"/>
      </Fail>
    </Resource>
  </Resources>

  <RestConnector Id="Gists" Title="Gists" HelpUrl="https://developer.github.com/v3/gists/">
    <Parameters>
      <Select Id="Type" Title="Gists to retrieve" DefaultValue="public" Required="true">
        <DataSource>
          <Item Id="public" Title="Public"/>
          <Item Id="user" Title="User's gists"/>
          <Item Id="mine" Title="My gists"/>
          <Item Id="starred" Title="My starred gists"/>
        </DataSource>
      </Select>
      <Text Id="Target" Title="Username" Required="False" HelpText="Only required if &quot;User's gists&quot; is selected"/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/
        @if(Model.Type == "public")
        {
          @: gists/public
        }
        else if(Model.Type == "starred")
        {
          @: gists/starred
        }
        else if(Model.Type == "mine")
        {
          @: gists
        }
        else if(Model.Type == "user")
        {
          if (!string.IsNullOrEmpty(Model.Target)) {
            @: users/@(Model.Target)/gists
          }
          else {
            throw new Exception("Username is required");
            @: gists
          }
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="owner.login" Id="AuthorLogin" Title="Author" Converter="String"/>
        <JsonPath Expr="owner.id" Id="AuthorId" Title="Author ID" Converter="Int"/>
        <JsonPath Expr="owner.html_url" Id="AuthorUrl" Title="Author Url" Converter="String" Checked="false"/>
        <JsonPath Expr="url" Id="Url" Title="Url" Converter="String" Checked="false"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="forks_url" Id="ForksUrl" Title="Forks URL" Converter="String" Checked="false"/>
        <JsonPath Expr="commits_url" Id="CommitsUrl" Title="Commits URL" Converter="String" Checked="false"/>
        <JsonPath Expr="git_pull_url" Id="GitPullUrl" Title="Pull URL" Converter="String" Checked="false"/>
        <JsonPath Expr="git_push_url" Id="GitPushUrl" Title="Push URL" Converter="String" Checked="false"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="Html Url" Converter="String"/>
        <JsonPath Expr="comments_url" Id="Comments_url" Title="Comments_url" Converter="String"/>
        <JsonPath Expr="public" Id="Public" Title="Public" Converter="Bool"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="description" Id="Description" Title="Description" Converter="String"/>
        <JsonPath Expr="comments" Id="Comments" Title="Comments" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Organizations" Title="Organizations" HelpUrl="https://developer.github.com/v3/orgs/">
    <Parameters>
      <Select Id="Type" Title="Organizations to retrieve" DefaultValue="public" Required="true">
        <DataSource>
          <Item Id="public" Title="All"/>
          <Item Id="user" Title="User's organization"/>
          <Item Id="mine" Title="My organizations"/>
        </DataSource>
      </Select>
      <Text Id="Target" Title="Username" Required="False" HelpText="Only required if &quot;User's organizations&quot; is selected"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="10000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/
        @if(Model.Type == "public")
        {
          @: organizations
        }
         else if(Model.Type == "mine")
        {
          @: user/orgs
        }
        else if(Model.Type == "user")
        {
          if (!string.IsNullOrEmpty(Model.Target)) {
            @: users/@(Model.Target)/orgs
          }
          else {
            throw new Exception("Username is required");
            @: orgs
          }
        }
        ?per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="login" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="description" Id="Description" Title="Description" Converter="String"/>
        <Compute Id="Url" Title="Url" Expr="https://github.com/@(Model.Inp)" Converter="String">
          <JsonPath Expr="login" Id="Inp" Converter="String"/>
        </Compute>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node ID" Converter="String" Checked="false"/>
        <JsonPath Expr="repos_url" Id="ReposUrl" Title="Repos URL" Converter="String" Checked="false"/>
        <JsonPath Expr="events_url" Id="EventsUrl" Title="Events URL" Converter="String" Checked="false"/>
        <JsonPath Expr="hooks_url" Id="HooksUrl" Title="Hooks URL" Converter="String" Checked="false"/>
        <JsonPath Expr="issues_url" Id="IssuesUrl" Title="Issues URL" Converter="String" Checked="false"/>
        <JsonPath Expr="members_url" Id="MembersUrl" Title="Members URL" Converter="String" Checked="false"/>
        <JsonPath Expr="public_members_url" Id="PublicMembersUrl" Title="Public members URL" Converter="String" Checked="false"/>
        <JsonPath Expr="avatar_url" Id="AvatarUrl" Title="Avatar URL" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="UserFollowers" Title="User Followers" HelpUrl="https://developer.github.com/v3/users/followers/">
    <Parameters>
      <Select Id="Type" Title="Organizations to retrieve" DefaultValue="followers" Required="true">
        <DataSource>
          <Item Id="followers" Title="User's followers"/>
          <Item Id="myfollowers" Title="My followers"/>
          <Item Id="followed" Title="Users followed by another user"/>
        </DataSource>
      </Select>
      <Text Id="Target" Title="Username" Required="True"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="10000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/
        @if(Model.Type == "followers")
        {
          @: users/@(Model.Target)/followers
        }
        else if(Model.Type == "myfollowers")
        {
          @: user/followers
        }
        else if(Model.Type == "followed")
        {
          @: users/@(Model.Target)/following
        }
        ?per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="login" Id="Login" Title="Username" Converter="String"/>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="html_url" Id="Html_url" Title="URL" Converter="String"/>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String"/>
        <JsonPath Expr="avatar_url" Id="AvatarUrl" Title="Avatar URL" Converter="String"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="gravatar_id" Id="GravatarId" Title="Gravatar ID" Converter="String" Checked="false"/>
        <JsonPath Expr="url" Id="Url" Title="API URL" Converter="String" Checked="false"/>
        <JsonPath Expr="followers_url" Id="FollowersUrl" Title="Followers URL" Converter="String" Checked="false"/>
        <JsonPath Expr="following_url" Id="FollowingUrl" Title="Following URL" Converter="String" Checked="false"/>
        <JsonPath Expr="gists_url" Id="GistUrl" Title="Gists URL" Converter="String" Checked="false"/>
        <JsonPath Expr="starred_url" Id="StarredUrl" Title="Starred URL" Converter="String" Checked="false"/>
        <JsonPath Expr="subscriptions_url" Id="SubscriptionsUrl" Title="Subscriptions URL" Converter="String" Checked="false"/>
        <JsonPath Expr="organizations_url" Id="OrganizationsUrl" Title="Organizations URL" Converter="String" Checked="false"/>
        <JsonPath Expr="repos_url" Id="ReposUrl" Title="Repos URL" Converter="String" Checked="false"/>
        <JsonPath Expr="events_url" Id="EventsUrl" Title="Events URL" Converter="String" Checked="false"/>
        <JsonPath Expr="received_events_url" Id="Received Events URL" Title="Received Events URL" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="SearchRepos" Title="Search Repositories" HelpUrl="https://developer.github.com/v3/search/#search-repositories">
    <Parameters>
      <Text Id="Query" Title="Query" Required="true"/>
      <Select Id="SortBy" DefaultValue="updated" Required="true">
        <DataSource>
          <Item Id="stars" Title="Stars"/>
          <Item Id="forks" Title="Forks"/>
          <Item Id="updated" Title="Updated"/>
        </DataSource>
      </Select>
      <Select Id="SortOrder" DefaultValue="desc">
        <DataSource>
          <Item Id="asc" Title="Ascending"/>
          <Item Id="asc" Title="Descending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/search/repositories?
        q=@(Utils.UrlEncode(Model.Query))
        &sort=@(Model.SortBy)
        &order=@(Model.SortOrder)
        @if(Model.PageCursor.Page != 0) {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.items.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node ID" Converter="String" Checked="false"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="full_name" Id="FullName" Title="Full Name" Converter="String"/>
        <JsonPath Expr="owner.login" Id="OwnerLogin" Title="Owner" Converter="String"/>
        <JsonPath Expr="owner.id" Id="OwnerId" Title="Owner ID" Converter="Int"/>
        <JsonPath Expr="owner.avatar_url" Id="OwnerAvatar" Title="Owner Avatar URL" Converter="String" Checked="false"/>
        <JsonPath Expr="owner.type" Id="OwnerType" Title="Owner Type" Converter="String"/>
        <JsonPath Expr="private" Id="Private" Title="Private" Converter="Bool"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="description" Id="Description" Title="Description" Converter="String"/>
        <JsonPath Expr="fork" Id="Fork" Title="Fork" Converter="Bool"/>
        <JsonPath Expr="url" Id="Url" Title="API Url" Converter="String" Checked="false"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="pushed_at" Id="Pushed_at" Title="Pushed" Converter="DateTime"/>
        <JsonPath Expr="homepage" Id="Homepage" Title="Homepage" Converter="String"/>
        <JsonPath Expr="size" Id="Size" Title="Size" Converter="Int"/>
        <JsonPath Expr="stargazers_count" Id="StargazersCount" Title="Starred" Converter="Int"/>
        <JsonPath Expr="watchers_count" Id="WatchersCount" Title="Watched" Converter="Int"/>
        <JsonPath Expr="language" Id="Language" Title="Language" Converter="String"/>
        <JsonPath Expr="forks_count" Id="ForksCount" Title="Forks" Converter="Int"/>
        <JsonPath Expr="open_issues_count" Id="OpenIssuesCount" Title="Open Issues" Converter="Int"/>
        <JsonPath Expr="master_branch" Id="MasterBranch" Title="Master Branch" Converter="String" Checked="false"/>
        <JsonPath Expr="default_branch" Id="DefaultBanch" Title="Default Branch" Converter="String" Checked="false"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Repositories" Title="Repositories" HelpUrl="https://developer.github.com/v3/repos/">
    <Parameters>
      <Select Id="Type" Title="Gists to retrieve" DefaultValue="public" Required="true">
        <DataSource>
          <Item Id="public" Title="Public"/>
          <Item Id="user" Title="User's repositories"/>
          <Item Id="organization" Title="Organization's repositories"/>
          <Item Id="mine" Title="My repositories"/>
        </DataSource>
      </Select>
      <Text Id="Target" Title="Username/Organization name" Required="False" HelpText="Only required if &quot;User's/organization's repositories &quot; is selected"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/
        @if(Model.Type == "public")
        {
          @: repositories
        }
        else if(Model.Type == "mine")
        {
          @: user/repos
        }
        else if(Model.Type == "user" || Model.Type == "organization")
        {
          if (!string.IsNullOrEmpty(Model.Target)) {
            if(Model.Type == "user")
            {
              @: users/@(Model.Target)/repos
            }
            else if(Model.Type == "organization")
            {
              @: orgs/@(Model.Target)/repos
            }
          }
          else {
           throw new Exception("Username is required");
            @: repositories
          }
        }
        @if(Model.PageCursor.Page != 0)
        {
          @: ?since=@(Model.PageCursor.NextSkip)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node ID" Converter="String" Checked="false"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="full_name" Id="FullName" Title="Full Name" Converter="String"/>
        <JsonPath Expr="owner.login" Id="OwnerLogin" Title="Owner" Converter="String"/>
        <JsonPath Expr="owner.id" Id="OwnerId" Title="Owner ID" Converter="Int"/>
        <JsonPath Expr="owner.avatar_url" Id="OwnerAvatar" Title="Owner Avatar URL" Converter="String" Checked="false"/>
        <JsonPath Expr="owner.type" Id="OwnerType" Title="Owner Type" Converter="String"/>
        <JsonPath Expr="private" Id="Private" Title="Private" Converter="Bool"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="description" Id="Description" Title="Description" Converter="String"/>
        <JsonPath Expr="fork" Id="Fork" Title="Fork" Converter="Bool"/>
        <JsonPath Expr="url" Id="Url" Title="API Url" Converter="String" Checked="false"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="pushed_at" Id="Pushed_at" Title="Pushed" Converter="DateTime"/>
        <JsonPath Expr="homepage" Id="Homepage" Title="Homepage" Converter="String"/>
        <JsonPath Expr="size" Id="Size" Title="Size" Converter="Int"/>
        <JsonPath Expr="stargazers_count" Id="StargazersCount" Title="Starred" Converter="Int"/>
        <JsonPath Expr="watchers_count" Id="WatchersCount" Title="Watched" Converter="Int"/>
        <JsonPath Expr="language" Id="Language" Title="Language" Converter="String"/>
        <JsonPath Expr="forks_count" Id="ForksCount" Title="Forks" Converter="Int"/>
        <JsonPath Expr="open_issues_count" Id="OpenIssuesCount" Title="Open Issues" Converter="Int"/>
        <JsonPath Expr="master_branch" Id="MasterBranch" Title="Master Branch" Converter="String" Checked="false"/>
        <JsonPath Expr="default_branch" Id="DefaultBanch" Title="Default Branch" Converter="String" Checked="false"/>
        <JsonPath Expr="score" Id="Score" Title="Score" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Commits" Title="Repository Commits" HelpUrl="https://developer.github.com/v3/repos/commits/">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="nielsbosma"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="SeoTools-for-Excel-Connectors"/>
      <Text Id="Author" Title="Filter by author" Required="false" Debug.DefaultValue="diskborsteMC"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/commits
        ?page=@(Model.PageCursor.Page+1)
        &per_page=100
        @if(!string.IsNullOrEmpty(Model.Author)){
          @: &author=@(Model.Author)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="url" Id="Url" Title="API Url" Converter="String" Checked="false"/>
        <JsonPath Expr="sha" Id="Sha" Title="Sha" Converter="String"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="comments_url" Id="CommentsUrl" Title="Comments Url" Converter="String"/>
        <JsonPath Expr="commit.url" Id="CommitUrl" Title="Commit Url" Converter="String"/>
        <JsonPath Expr="commit.date" Id="Date" Title="Date" Converter="DateTime"/>
        <JsonPath Expr="commit.message" Id="CommitMessage" Title="Message" Converter="String"/>
        <JsonPath Expr="comment_count" Id="CommentCount" Title="Comment Count" Converter="Int" Checked="false"/>
        <JsonPath Expr="verification.verified" Id="VerificationVerified" Title="Verified" Converter="String" Checked="false"/>
        <JsonPath Expr="verification.reason" Id="VerificationReason" Title="Verification Reason" Converter="String" Checked="false"/>
        <JsonPath Expr="author.login" Id="AuthorLogin" Title="Author" Converter="String"/>
        <JsonPath Expr="author.id" Id="AuthorId" Title="Author Id" Converter="Int"/>
        <JsonPath Expr="author.avatar_url" Id="AuthorAvatarUrl" Title="Author Avatar URL" Converter="String" Checked="false"/>
        <JsonPath Expr="author.html_url" Id="AuthorHtmlUrl" Title="Author URL" Converter="String"/>
        <JsonPath Expr="author.type" Id="AuthorType" Title="Author Type" Converter="String"/>
        <JsonPath Expr="committer.login" Id="CommitterLogin" Title="Committer" Converter="String"/>
        <JsonPath Expr="committer.id" Id="CommitterId" Title="Committer Id" Converter="Int"/>
        <JsonPath Expr="committer.avatar_url" Id="CommitterAvatarUrl" Title="Committer Avatar Url" Converter="String" Checked="false"/>
        <JsonPath Expr="committer.html_url" Id="CommitterHtmlUrl" Title="Committer URL" Converter="String"/>
        <JsonPath Expr="committer.type" Id="CommitterType" Title="Committer Type" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Collaborators" Title="Repository Collaborators" HelpUrl="https://developer.github.com/v3/repos/collaborators/#list-collaborators">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="nielsbosma"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="SeoTools-for-Excel-Connectors"/>
      <Select Id="Affiliation" Title="Filter collaborators" DefaultValue="all" Required="false">
        <DataSource>
          <Item Id="all" Title="All"/>
          <Item Id="outside" Title="Outside collaborators"/>
          <Item Id="direct" Title="Collaborators with permissions"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/collaborators?
        affiliation=@(Model.Affiliation)
        &per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="login" Id="Login" Title="Username" Converter="String"/>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="html_url" Id="Html_url" Title="URL" Converter="String"/>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String"/>
        <JsonPath Expr="avatar_url" Id="AvatarUrl" Title="Avatar URL" Converter="String"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="gravatar_id" Id="GravatarId" Title="Gravatar ID" Converter="String" Checked="false"/>
        <JsonPath Expr="url" Id="Url" Title="API URL" Converter="String" Checked="false"/>
        <JsonPath Expr="followers_url" Id="FollowersUrl" Title="Followers URL" Converter="String" Checked="false"/>
        <JsonPath Expr="following_url" Id="FollowingUrl" Title="Following URL" Converter="String" Checked="false"/>
        <JsonPath Expr="gists_url" Id="GistUrl" Title="Gists URL" Converter="String" Checked="false"/>
        <JsonPath Expr="starred_url" Id="StarredUrl" Title="Starred URL" Converter="String" Checked="false"/>
        <JsonPath Expr="subscriptions_url" Id="SubscriptionsUrl" Title="Subscriptions URL" Converter="String" Checked="false"/>
        <JsonPath Expr="organizations_url" Id="OrganizationsUrl" Title="Organizations URL" Converter="String" Checked="false"/>
        <JsonPath Expr="repos_url" Id="ReposUrl" Title="Repos URL" Converter="String" Checked="false"/>
        <JsonPath Expr="events_url" Id="EventsUrl" Title="Events URL" Converter="String" Checked="false"/>
        <JsonPath Expr="received_events_url" Id="Received Events URL" Title="Received Events URL" Converter="String" Checked="false"/>
        <JsonPath Expr="permissions.pull" Id="Pull" Title="Pull permissions" Converter="Bool"/>
        <JsonPath Expr="permissions.push" Id="Push" Title="Push permissions" Converter="Bool"/>
        <JsonPath Expr="permissions.admin" Id="Admin" Title="Admin permissions" Converter="Bool"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Releases" Title="Repository Releases" HelpUrl="https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="facebook"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="react"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/releases?
        &per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="url" Id="Url" Title="Url" Converter="String"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="Html Url" Converter="String"/>
        <JsonPath Expr="assets_url" Id="AssetsUrl" Title="Assets Url" Converter="String"/>
        <JsonPath Expr="upload_url" Id="UploadUrl" Title="Upload Url" Converter="String"/>
        <JsonPath Expr="tarball_url" Id="TarballUrl" Title="Tarball Url" Converter="String"/>
        <JsonPath Expr="zipball_url" Id="ZipballUrl" Title="Zipball Url" Converter="String"/>
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String"/>
        <JsonPath Expr="tag_name" Id="TagName" Title="Tag Name" Converter="String"/>
        <JsonPath Expr="target_commitish" Id="TargetCommitish" Title="Target Commitish" Converter="String"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="body" Id="Body" Title="Body" Converter="String"/>
        <JsonPath Expr="draft" Id="Draft" Title="Draft" Converter="String"/>
        <JsonPath Expr="prerelease" Id="Prerelease" Title="Prerelease" Converter="DateTime"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="published_at" Id="PublishedAt" Title="Published" Converter="DateTime"/>
        <JsonPath Expr="author.login" Id="Login" Title="Author" Converter="String"/>
        <JsonPath Expr="author.id" Id="Id" Title="Author Id" Converter="Int"/>
        <JsonPath Expr="author.html_url" Id="HtmlUrl" Title="Author URL" Converter="String" Checked="false"/>
        <JsonPath Expr="author.avatar_url" Id="AvatarUrl" Title="Author Avatar URL" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="WebHooks" Title="Repository Webhooks" HelpUrl="https://developer.github.com/v3/repos/hooks/#list-hooks">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="facebook"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="react"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/hooks?
        &per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="url" Id="Url" Title="Url" Converter="String"/>
        <JsonPath Expr="test_url" Id="TestUrl" Title="Test Url" Converter="String"/>
        <JsonPath Expr="ping_url" Id="PingUrl" Title="Ping Url" Converter="String"/>
        <JsonPath Expr="events" Id="Events" Title="Events" Converter="String" Checked="false"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdateddAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="active" Id="Active" Title="Active" Converter="Bool"/>
        <JsonPath Expr="config.url" Id="HookUrl" Title="Hook URL" Converter="String"/>
        <JsonPath Expr="config.content_type" Id="ContentType" Title="Content Type" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Branches" Title="Repository Branches" HelpUrl="https://developer.github.com/v3/repos/branches/#list-branches">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="facebook"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="react"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/branches?
        per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="commit.url" Id="CommitUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="commit.sha" Id="Sha" Title="SHA" Converter="String"/>
        <JsonPath Expr="protected" Id="Protected" Title="Protected" Converter="Boolean" Checked="false"/>
        <JsonPath Expr="protection_url" Id="ProtectionUrl" Title="Protection URL" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Forks" Title="Repository Forks" HelpUrl="https://developer.github.com/v3/repos/forks/">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="facebook"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="react"/>
      <Select Id="SortBy" DefaultValue="newest" Required="true">
        <DataSource>
          <Item Id="newest" Title="Newest first"/>
          <Item Id="oldest" Title="Oldest first"/>
          <Item Id="stargazers" Title="Most starred first"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/forks?
        sort=@(Model.SortBy)
        &per_page=100
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="full_name" Id="FullName" Title="Full Name" Converter="String"/>
        <JsonPath Expr="description" Id="Description" Title="Description" Converter="String"/>
        <JsonPath Expr="owner.login" Id="OwnerLogin" Title="Owner" Converter="String"/>
        <JsonPath Expr="owner.id" Id="OwnerId" Title="Owner Id" Converter="Int"/>
        <JsonPath Expr="owner.html_url" Id="OwnerHtmlUrl" Title="Owner URL" Converter="String"/>
        <JsonPath Expr="private" Id="Private" Title="Private" Converter="Bool"/>
        <JsonPath Expr="fork" Id="Fork" Title="Fork" Converter="Bool"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="forks_count" Id="ForksCount" Title="Forks" Converter="Int"/>
        <JsonPath Expr="stargazers_count" Id="StargazersCount" Title="Stargazers" Converter="Int"/>
        <JsonPath Expr="watchers_count" Id="WatchersCount" Title="Watchers" Converter="Int"/>
        <JsonPath Expr="size" Id="Size" Title="Size" Converter="Int"/>
        <JsonPath Expr="default_branch" Id="DefaultBranch" Title="Default Branch" Converter="String"/>
        <JsonPath Expr="open_issues_count" Id="OpenIssuesCount" Title="Open Issues" Converter="Int"/>
        <JsonPath Expr="has_issues" Id="HasIssues" Title="Has Issues" Converter="Bool"/>
        <JsonPath Expr="has_wiki" Id="HasWiki" Title="Has Wiki" Converter="SBool"/>
        <JsonPath Expr="has_pages" Id="HasPages" Title="Has Pages" Converter="BOol"/>
        <JsonPath Expr="has_downloads" Id="HasDownloads" Title="Has Downloads" Converter="Bool"/>
        <JsonPath Expr="archived" Id="Archived" Title="Archived" Converter="Bool"/>
        <JsonPath Expr="pushed_at" Id="PushedAt" Title="Pushed At" Converter="Datetime"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="subscribers_count" Id="SubscribersCount" Title="Subscribers" Converter="Int"/>
        <JsonPath Expr="network_count" Id="NetworkCount" Title="Network Size" Converter="Int"/>
        <JsonPath Expr="license.key" Id="LicenseKey" Title="License Key" Converter="String" Checked="false"/>
        <JsonPath Expr="license.name" Id="LicenseName" Title="License Name" Converter="String"/>
        <JsonPath Expr="license.url" Id="LicenseUrl" Title="License Url" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Comments" Title="Repository Comments" HelpUrl="https://developer.github.com/v3/repos/comments/">
    <Parameters>
      <Text Id="Owner" Title="Owner" Required="True" Debug.DefaultValue="facebook"/>
      <Text Id="Repository" Title="Repository" Required="true" Debug.DefaultValue="react"/>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="1000">
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/repos/@(Model.Owner)/@(Model.Repository)/comments?
        page=@(Model.PageCursor.Page+1)
        &per_page=100
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="ID" Converter="Int"/>
        <JsonPath Expr="url" Id="Url" Title="API Url" Converter="String" Checked="false"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node ID" Converter="String" Checked="false"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="URL" Converter="String"/>
        <JsonPath Expr="body" Id="Body" Title="Body" Converter="String"/>
        <JsonPath Expr="path" Id="Path" Title="Path" Converter="String"/>
        <JsonPath Expr="position" Id="Position" Title="Position" Converter="Int"/>
        <JsonPath Expr="line" Id="Line" Title="Line" Converter="Int"/>
        <JsonPath Expr="commit_id" Id="CommitId" Title="Commit ID" Converter="String"/>
        <JsonPath Expr="user.login" Id="User" Title="User" Converter="String"/>
        <JsonPath Expr="user.id" Id="UserId" Title="User ID" Converter="String"/>
        <JsonPath Expr="user.html_url" Id="UserUrl" Title="User URL" Converter="String" Checked="false"/>
        <JsonPath Expr="usernode_id" Id="UserNodeId" Title="User Node II" Converter="String" Checked="false"/>
        <JsonPath Expr="user.type" Id="UserType" Title="User Type" Converter="String" Checked="false"/>
        <JsonPath Expr="user.avatar_url" Id="AvatarUrl" Title="Avatar URL" Converter="String" Checked="false"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Issues" Title="Issues" HelpUrl="https://developer.github.com/v3/issues/#list-issues">
    <Parameters>
      <Select Id="Type" Title="Gists to retrieve" DefaultValue="assigned" Required="true">
        <DataSource>
          <Item Id="assigned" Title="Assigned to me"/>
          <Item Id="created" Title="Created by me"/>
          <Item Id="mentioned" Title="Issues mentioning me"/>
          <Item Id="subscribed" Title="Subscribed"/>
          <Item Id="all" Title="All"/>
        </DataSource>
      </Select>
      <Select Id="State" Title="Filter by state" DefaultValue="open" Required="true">
        <DataSource>
          <Item Id="open" Title="Open"/>
          <Item Id="closed" Title="Closed"/>
          <Item Id="All" Title="All"/>
        </DataSource>
      </Select>
      <Select Id="SortBy" DefaultValue="created" Required="true">
        <DataSource>
          <Item Id="created" Title="Created"/>
          <Item Id="updated" Title="Updated"/>
          <Item Id="comments" Title="Comments"/>
        </DataSource>
      </Select>
      <Select Id="SortOrder" DefaultValue="desc">
        <DataSource>
          <Item Id="asc" Title="Ascending"/>
          <Item Id="asc" Title="Descending"/>
        </DataSource>
      </Select>
    </Parameters>
    <Paging PageSize="100" EvenPages="true" MaxTake="10000"></Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.github.com/issues?
        page=@(Model.PageCursor.Page+1)
        &per_page=100
        &filter=@(Model.Type)
        &state=@(Model.State)
        &sort=@(Model.SortBy)
        &order=@(Model.SortOrder)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="html_url" Id="HtmlUrl" Title="Html Url" Converter="String"/>
        <JsonPath Expr="node_id" Id="NodeId" Title="Node Id" Converter="String" Checked="false"/>
        <JsonPath Expr="comments_url" Id="Comments_url" Title="Comments_url" Converter="String"/>
        <JsonPath Expr="public" Id="Public" Title="Public" Converter="Bool"/>
        <JsonPath Expr="number" Id="Number" Title="Number" Converter="Int"/>
        <JsonPath Expr="state" Id="State" Title="State" Converter="String"/>
        <JsonPath Expr="title" Id="Title" Title="Title" Converter="String"/>
        <JsonPath Expr="body" Id="Body" Title="Body" Converter="String"/>
        <JsonPath Expr="user.id" Id="UserId" Title="User ID" Converter="Int"/>
        <JsonPath Expr="user.login" Id="UserLogin" Title="Username" Converter="String"/>
        <JsonPath Expr="labels.*.name" Id="Labels*Name" Title="Labels" Converter="String"/>
        <JsonPath Expr="assignee.id" Id="AssigneeId" Title="Assignee ID" Converter="Int"/>
        <JsonPath Expr="assignee.login" Id="AssigneeLogin" Title="Assignee Login" Converter="String"/>
        <JsonPath Expr="assignee.html_url" Id="AssigneeHtmlUrl" Title="Assignee URL" Converter="String"/>
        <JsonPath Expr="milestone.id" Id="MilestoneId" Title="Milestone Id" Converter="Int"/>
        <JsonPath Expr="milestone.description" Id="MilestoneDescription" Title="Milestone Description" Converter="String"/>
        <JsonPath Expr="milestone.state" Id="MilestoneState" Title="Milestone State" Converter="String"/>
        <JsonPath Expr="milestone.html_url" Id="MilestoneHtmlUrl" Title="Milestone URL" Converter="String"/>
        <JsonPath Expr="locked" Id="Locked" Title="Locked" Converter="Bool"/>
        <JsonPath Expr="active_lock_reason" Id="ActiveLockReason" Title="Lock Reason" Converter="String"/>
        <JsonPath Expr="comments" Id="Comments" Title="Comments" Converter="Int"/>
        <JsonPath Expr="repository.id" Id="RepositoryId" Title="Repository Id" Converter="Int"/>
        <JsonPath Expr="repository.name" Id="RepositoryName" Title="Repository Name" Converter="String"/>
        <JsonPath Expr="repository.full_name" Id="RepositoryFullName" Title="Repository Full Name" Converter="String" Checked="false"/>
        <JsonPath Expr="created_at" Id="CreatedAt" Title="Created" Converter="DateTime"/>
        <JsonPath Expr="updated_at" Id="UpdatedAt" Title="Updated" Converter="DateTime"/>
        <JsonPath Expr="closed_at" Id="ClosedAt" Title="Closed" Converter="DateTime"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    string CreateBasicAuth()
    {
      return Convert.ToBase64String(ASCIIEncoding.ASCII.GetBytes(Model.Username + ":" + Model.AccessToken));
    }
    ]]>
  </RazorFunctions>
</Suite>