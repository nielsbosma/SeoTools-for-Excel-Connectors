<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Social" Title="Slack" Id="Slack" RequireVersion="6.1.10" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Slack.xml" HelpUrl="http://seotoolsforexcel.com/slack/" HelpText="Documentation">

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/slack/">
    <Text Id="Token" Title="Access Token" Required="true"/>
  </Settings>

  <RestConnector Id="ChannelsHidden" HelpUrl="https://api.slack.com/methods/channels.list" Hidden="true">
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[https://slack.com/api/channels.list]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.channels.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="PrivateChannelsHidden" HelpUrl="https://api.slack.com/methods/groups.list" Hidden="true">
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[https://slack.com/api/groups.list]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.groups.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="Channels" Title="Channels List" HelpText="This method returns a list of all channels in the team." HelpUrl="https://api.slack.com/methods/channels.list">
    <Paging PageSize="20" EvenPages="true">
      <Parse>
        <JsonPath Id="Cursor" Expr="response_metadata.next_cursor"/>
      </Parse>
    </Paging>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/channels.list
				?limit=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &cursor=@(Model.Cursor)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.channels.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix" HelpText=""/>
        <JsonPath Expr="creator" Id="Creator" Title="Creator" Converter="String" HelpText=""/>
        <JsonPath Expr="is_shared" Id="Shared" Title="Shared" Converter="Bool" HelpText=""/>
        <JsonPath Expr="is_member" Id="Member" Title="Member" Converter="Bool" HelpText=""/>
        <JsonPath Expr="is_private" Id="Private" Title="Private" Converter="Bool" HelpText=""/>
        <Compute Id="Members" Title="Members"  Converter="String" HelpText="">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.Members, @"\s+", " ");
              var temp2 = temp.Substring(1,temp.Length-2);
              var final = temp2.Replace("\"", string.Empty);
            }
            @final
            ]]>
          </Compute.Expr>
        <JsonPath Expr="members" Id="Members" Converter="String"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="ChannelLookup" Title="Channel Lookup" HelpText="Gets information about a channel." HelpUrl="https://api.slack.com/methods/channels.info">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id" DefaultValue="" Required="true" Debug.DefaultValue="C497RQTBQ" Select.Connector="ChannelsHidden" Select.IdField="Id" Select.TitleField="Name"/>
    </Parameters>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/channels.info
				?channel=@(Model.ChannelId)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.channel">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix" HelpText=""/>
        <JsonPath Expr="creator" Id="Creator" Title="Creator" Converter="String" HelpText=""/>
        <JsonPath Expr="is_shared" Id="Shared" Title="Shared" Converter="Bool" HelpText=""/>
        <JsonPath Expr="is_member" Id="Member" Title="Member" Converter="Bool" HelpText=""/>
        <JsonPath Expr="is_private" Id="Private" Title="Private" Converter="Bool" HelpText=""/>
        <Compute Id="Members" Title="Members"  Converter="String" HelpText="">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.Members, @"\s+", " ");
              var temp2 = temp.Substring(1,temp.Length-2);
              var final = temp2.Replace("\"", string.Empty);
            }
            @final
            ]]>
          </Compute.Expr>
        <JsonPath Expr="members" Id="Members" Converter="String"/>
        </Compute>
        <JsonPath Expr="latest.text" Id="Latest" Title="Latest" Converter="String" HelpText=""/>
        <JsonPath Expr="unread_count" Id="Unread" Title="Unread" Converter="Int" HelpText=""/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="PrivateChannels" Title="Private Channels List" HelpText="Lists private channels that the calling user has access to." HelpUrl="https://api.slack.com/methods/groups.list">
    <Paging PageSize="20" EvenPages="true">
      <Parse>
        <JsonPath Id="Cursor" Expr="response_metadata.next_cursor"/>
      </Parse>
    </Paging>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/groups.list
				?limit=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &cursor=@(Model.Cursor)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.groups.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix" HelpText=""/>
        <JsonPath Expr="creator" Id="Creator" Title="Creator" Converter="String" HelpText=""/>

        <Compute Id="Members" Title="Members"  Converter="String" HelpText="">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.Members, @"\s+", " ");
              var temp2 = temp.Substring(1,temp.Length-2);
              var final = temp2.Replace("\"", string.Empty);
            }
            @final
            ]]>
          </Compute.Expr>
        <JsonPath Expr="members" Id="Members" Converter="String"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="PrivateChannelsLookup" Title="Private Channels Lookup" HelpText="Gets information about a private channel." HelpUrl="https://api.slack.com/methods/groups.info">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id" DefaultValue="" Required="true" Debug.DefaultValue="G9J8AKYH5" Select.Connector="PrivateChannelsHidden" Select.IdField="Id" Select.TitleField="Name"/>
		</Parameters>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/groups.info
				?channel=@(Model.ChannelId)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.group">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String" HelpText="Target of the request."/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String" HelpText=""/>
        <JsonPath Expr="created" Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix" HelpText=""/>
        <JsonPath Expr="creator" Id="Creator" Title="Creator" Converter="String" HelpText=""/>
        <Compute Id="Members" Title="Members"  Converter="String" HelpText="">
          <Compute.Expr>
            <![CDATA[
            @{
              var temp = Regex.Replace(Model.Members, @"\s+", " ");
              var temp2 = temp.Substring(1,temp.Length-2);
              var final = temp2.Replace("\"", string.Empty);
            }
            @final
            ]]>
          </Compute.Expr>
					<JsonPath Expr="members" Id="Members" Converter="String"/>
        </Compute>
        <JsonPath Expr="latest.text" Id="Latest" Title="Latest" Converter="String" HelpText=""/>
        <JsonPath Expr="unread_count" Id="Unread" Title="Unread" Converter="Int" HelpText=""/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="ChannelHistory" Title="Channel History" HelpText="Fetches history of messages and events from a channel." HelpUrl="https://api.slack.com/methods/channels.history">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id" DefaultValue="" Required="true" Debug.DefaultValue="C497RQTBQ" Select.Connector="ChannelsHidden" Select.IdField="Id" Select.TitleField="Name"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Number Id="Count" Title="Count" DefaultValue="100" Min="1" Max="1000" Required="true" HelpText=""/>
		</Parameters>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/channels.history
				?channel=@(Model.ChannelId)
				@if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
				{
						@: &oldest=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
						@: &latest=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
				}
				&count=@(Model.Count)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.messages.*">
        <JsonPath Expr="ts" Id="Identifier" Title="Identifier" Converter="String" HelpText=""/>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String" HelpText=""/>
        <JsonPath Expr="subtype" Id="Subtype" Title="Subtype" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="user" Id="User" Title="User" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="username" Id="Username" Title="Username" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="text" Id="Text" Title="Text" Converter="String" HelpText=""/>
        <Compute Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix">
          <Compute.Expr>
            <![CDATA[
              @{
                Regex regex = new Regex(@"\d+");
                Match match = regex.Match(Model.Inp);
              }
              @(match.Groups[0].Value)
            ]]>
          </Compute.Expr>
          <JsonPath Expr="ts" Id="Inp" DefaultValue="" Converter="String"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="PrivateChannelHistory" Title="Private Channel History" HelpText="Fetches history of messages and events from a private channel." HelpUrl="https://api.slack.com/methods/groups.history">
    <Parameters>
      <Text Id="ChannelId" Title="Channel Id" DefaultValue="" Required="true" Debug.DefaultValue="C497RQTBQ" Select.Connector="PrivateChannelsHidden" Select.IdField="Id" Select.TitleField="Name"/>
      <DateInterval Id="DateInterval" Title="Date Interval" Required="false" Nullable="true"/>
      <Number Id="Count" Title="Count" DefaultValue="100" Min="1" Max="1000" Required="true" HelpText=""/>
		</Parameters>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/groups.history
				?channel=@(Model.ChannelId)
				@if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
				{
						@: &oldest=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
						@: &latest=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
				}
				&count=@(Model.Count)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.messages.*">
        <JsonPath Expr="ts" Id="Identifier" Title="Identifier" Converter="String" HelpText=""/>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String" HelpText=""/>
        <JsonPath Expr="subtype" Id="Subtype" Title="Subtype" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="user" Id="User" Title="User" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="username" Id="Username" Title="Username" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="text" Id="Text" Title="Text" Converter="String" HelpText=""/>
        <Compute Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix">
          <Compute.Expr>
            <![CDATA[
              @{
                Regex regex = new Regex(@"\d+");
                Match match = regex.Match(Model.Inp);
              }
              @(match.Groups[0].Value)
            ]]>
          </Compute.Expr>
          <JsonPath Expr="ts" Id="Inp" DefaultValue="" Converter="String"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="MessagesSearch" Title="Messages Search" HelpText="Searches for messages matching a query." HelpUrl="https://api.slack.com/methods/search.messages	">
    <Parameters>
      <Text Id="Query" Title="Query" DefaultValue="" Required="true" Debug.DefaultValue="seotools"/>
		</Parameters>
		<Paging PageSize="100" EvenPages="true"/>
    <Fetch>
      <HttpSettings>
        <RequestMethod>GET</RequestMethod>
        <RequestContentType>application/x-www-form-urlencoded</RequestContentType>
        <RequestHeaders>
          <Header Name='Authorization'><![CDATA[Bearer @(Model.Token)]]></Header>
        </RequestHeaders>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        https://slack.com/api/search.messages
				?query=@(Utils.UrlEncode(Model.Query))
        &count=@(Model.PageCursor.NextTake)
        &page=@(Model.PageCursor.Page+1
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.messages.matches.*">
        <JsonPath Expr="channel.id" Id="ChannelId" Title="Channel Id" Converter="String" HelpText=""/>
        <JsonPath Expr="channel.name" Id="ChannelName" Title="Channel Name" Converter="String" HelpText=""/>
        <JsonPath Expr="ts" Id="TextIdentifier" Title="Text Id" Converter="String" HelpText=""/>
        <JsonPath Expr="text" Id="Text" Title="Text" Converter="String" HelpText=""/>
        <Compute Id="Created" Title="Created" Converter="DateTime" Converter.SourceFormat="Unix">
          <Compute.Expr>
            <![CDATA[
              @{
                Regex regex = new Regex(@"\d+");
                Match match = regex.Match(Model.Inp);
              }
              @(match.Groups[0].Value)
            ]]>
          </Compute.Expr>
          <JsonPath Expr="ts" Id="Inp" DefaultValue="" Converter="String"/>
        </Compute>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String" HelpText=""/>
        <JsonPath Expr="user" Id="User" Title="User" Converter="String" HelpText="" DefaultValue=""/>
        <JsonPath Expr="username" Id="Username" Title="Username" Converter="String" HelpText="" DefaultValue=""/>
      </JsonPath>
    </Parse>
  </RestConnector>

</Suite>
