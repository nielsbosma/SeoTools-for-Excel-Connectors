<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Language" RequireVersion="7.0.0" Title="Google Translate" Id="GoogleTranslate" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/GoogleTranslate.xml" HelpUrl="http://seotoolsforexcel.com/google-translate/" HelpText="Documentation">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/google-translate/">
    <Text Id="APIKey" Title="API Key Id" Required="true" HelpUrl="http://seotoolsforexcel.com/google-translate/"/>
  </Settings>

  <RestConnector Id="Languages" Title="Languages" Hidden="true" HelpUrl="https://cloud.google.com/translate/docs/reference/languages">
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2/languages?key=@(Model.APIKey)
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestMethod>POST</RequestMethod>
        <RequestContentType>application/json; charset=utf-8</RequestContentType>
        <RequestBody>
					<![CDATA[
						@{
						var dict = new Dictionary<string, string>();
						dict.Add("target", "en");
						var output = Newtonsoft.Json.JsonConvert.SerializeObject(dict);
						}
						@output
					]]>
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.languages[*]">
        <JsonPath Expr="language" Id="Language" Converter="String"/>
        <JsonPath Expr="name" Id="Name" Converter="String"/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error.message"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="Detect" Title="Detect" HelpUrl="https://cloud.google.com/translate/docs/reference/detect">
    <Parameters>
      <Text Id="Text" Title="Text" Debug.DefaultValue="Ich würde wirklich gern Ihr Auto" Required="true" Multiline="true" HelpText="Enter one or more Texts separated by a new line"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2/detect?key=@(Model.APIKey)
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestMethod>POST</RequestMethod>
        <RequestContentType>application/json; charset=utf-8</RequestContentType>
        <RequestBody>
					@(GetJson())
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.detections[*].*">
				<Compute Id="Language" Title="Language" Converter="String">
					<Compute.Expr>
						<![CDATA[
						@{
							var dictLangs = new Dictionary<string, string>();
							string result = "";

							dictLangs.Add("af", "Afrikaans");
							dictLangs.Add("sq", "Albanian");
							dictLangs.Add("am", "Amharic");
							dictLangs.Add("ar", "Arabic");
							dictLangs.Add("hy", "Armenian");
							dictLangs.Add("az", "Azerbaijani");
							dictLangs.Add("eu", "Basque");
							dictLangs.Add("be", "Belarusian");
							dictLangs.Add("bn", "Bengali");
							dictLangs.Add("bs", "Bosnian");
							dictLangs.Add("bg", "Bulgarian");
							dictLangs.Add("ca", "Catalan");
							dictLangs.Add("ceb", "Cebuano");
							dictLangs.Add("ny", "Chichewa");
							dictLangs.Add("zh-CN", "Chinese (Simplified)");
							dictLangs.Add("zh", "Chinese (Simplified)");
							dictLangs.Add("zh-TW", "Chinese (Traditional)");
							dictLangs.Add("co", "Corsican");
							dictLangs.Add("hr", "Croatian");
							dictLangs.Add("cs", "Czech");
							dictLangs.Add("da", "Danish");
							dictLangs.Add("nl", "Dutch");
							dictLangs.Add("en", "English");
							dictLangs.Add("eo", "Esperanto");
							dictLangs.Add("et", "Estonian");
							dictLangs.Add("tl", "Filipino");
							dictLangs.Add("fi", "Finnish");
							dictLangs.Add("fr", "French");
							dictLangs.Add("fy", "Frisian");
							dictLangs.Add("gl", "Galician");
							dictLangs.Add("ka", "Georgian");
							dictLangs.Add("de", "German");
							dictLangs.Add("el", "Greek");
							dictLangs.Add("gu", "Gujarati");
							dictLangs.Add("ht", "Haitian Creole");
							dictLangs.Add("ha", "Hausa");
							dictLangs.Add("haw", "Hawaiian");
							dictLangs.Add("iw", "Hebrew");
							dictLangs.Add("hi", "Hindi");
							dictLangs.Add("hmn", "Hmong");
							dictLangs.Add("hu", "Hungarian");
							dictLangs.Add("is", "Icelandic");
							dictLangs.Add("ig", "Igbo");
							dictLangs.Add("id", "Indonesian");
							dictLangs.Add("ga", "Irish");
							dictLangs.Add("it", "Italian");
							dictLangs.Add("ja", "Japanese");
							dictLangs.Add("jw", "Javanese");
							dictLangs.Add("kn", "Kannada");
							dictLangs.Add("kk", "Kazakh");
							dictLangs.Add("km", "Khmer");
							dictLangs.Add("ko", "Korean");
							dictLangs.Add("ku", "Kurdish (Kurmanji)");
							dictLangs.Add("ky", "Kyrgyz");
							dictLangs.Add("lo", "Lao");
							dictLangs.Add("la", "Latin");
							dictLangs.Add("lv", "Latvian");
							dictLangs.Add("lt", "Lithuanian");
							dictLangs.Add("lb", "Luxembourgish");
							dictLangs.Add("mk", "Macedonian");
							dictLangs.Add("mg", "Malagasy");
							dictLangs.Add("ms", "Malay");
							dictLangs.Add("ml", "Malayalam");
							dictLangs.Add("mt", "Maltese");
							dictLangs.Add("mi", "Maori");
							dictLangs.Add("mr", "Marathi");
							dictLangs.Add("mn", "Mongolian");
							dictLangs.Add("my", "Myanmar (Burmese)");
							dictLangs.Add("ne", "Nepali");
							dictLangs.Add("no", "Norwegian");
							dictLangs.Add("ps", "Pashto");
							dictLangs.Add("fa", "Persian");
							dictLangs.Add("pl", "Polish");
							dictLangs.Add("pt", "Portuguese");
							dictLangs.Add("pa", "Punjabi");
							dictLangs.Add("ro", "Romanian");
							dictLangs.Add("ru", "Russian");
							dictLangs.Add("sm", "Samoan");
							dictLangs.Add("gd", "Scots Gaelic");
							dictLangs.Add("sr", "Serbian");
							dictLangs.Add("st", "Sesotho");
							dictLangs.Add("sn", "Shona");
							dictLangs.Add("sd", "Sindhi");
							dictLangs.Add("si", "Sinhala");
							dictLangs.Add("sk", "Slovak");
							dictLangs.Add("sl", "Slovenian");
							dictLangs.Add("so", "Somali");
							dictLangs.Add("es", "Spanish");
							dictLangs.Add("su", "Sundanese");
							dictLangs.Add("sw", "Swahili");
							dictLangs.Add("sv", "Swedish");
							dictLangs.Add("tg", "Tajik");
							dictLangs.Add("ta", "Tamil");
							dictLangs.Add("te", "Telugu");
							dictLangs.Add("th", "Thai");
							dictLangs.Add("tr", "Turkish");
							dictLangs.Add("uk", "Ukrainian");
							dictLangs.Add("ur", "Urdu");
							dictLangs.Add("uz", "Uzbek");
							dictLangs.Add("vi", "Vietnamese");
							dictLangs.Add("cy", "Welsh");
							dictLangs.Add("xh", "Xhosa");
							dictLangs.Add("yi", "Yiddish");
							dictLangs.Add("yo", "Yoruba");
							dictLangs.Add("zu", "Zulu");

							if (dictLangs.ContainsKey(Model.LanguageInput))
							{
								result = dictLangs[Model.LanguageInput];
							}
						}
						@result
						]]>
					</Compute.Expr>
					<JsonPath Expr="language" Id="LanguageInput" Converter="String"/>
				</Compute>
        <JsonPath Expr="confidence" Id="Confidence" Converter="Double"/>
				<JsonPath Expr="language" Id="LanguageShort" Title="Lang Shortcode" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error.message"/>
    </Fail>
  </RestConnector>

  <RestConnector Id="Translate" Title="Translate" HelpUrl="https://cloud.google.com/translate/docs/reference/translate">
    <Parameters>
      <Text Id="Text" Title="Text" Debug.DefaultValue="Ich würde wirklich gern Ihr Auto" Required="true" Multiline="true" HelpText="Enter one or more Texts separated by a new line"/>
			<Text Id="Target" Title="Target" Debug.DefaultValue="en" Required="true" Select.Connector="Languages" Select.IdField="Language" Select.TitleField="Name"/>
			<Text Id="Source" Title="Source (Optional)" DefaultValue="" HelpText="Returns 'Detected Language' if omitted" Required="false" Select.Connector="Languages" Select.IdField="Language" Select.TitleField="Name"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://translation.googleapis.com/language/translate/v2
				?key=@(Model.APIKey)
				&target=@(Model.Target)
				@if(!string.IsNullOrEmpty(Model.Source))
        {
          @: &source=@(Model.Source)
        }
        ]]>
      </Fetch.Url>
      <HttpSettings>
        <RequestMethod>POST</RequestMethod>
        <RequestContentType>application/json; charset=utf-8</RequestContentType>
        <RequestBody>
					@(GetJson())
				</RequestBody>
      </HttpSettings>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.data.translations[*]">
        <JsonPath Expr="translatedText" Id="Result" Converter="String"/>
				<Compute Id="SourceLanguage" Title="Detected Language" Converter="String" Checked="false">
					<Compute.Expr>
						<![CDATA[
						@{
							var dictLangs = new Dictionary<string, string>();
							string result = "";

							dictLangs.Add("af", "Afrikaans");
							dictLangs.Add("sq", "Albanian");
							dictLangs.Add("am", "Amharic");
							dictLangs.Add("ar", "Arabic");
							dictLangs.Add("hy", "Armenian");
							dictLangs.Add("az", "Azerbaijani");
							dictLangs.Add("eu", "Basque");
							dictLangs.Add("be", "Belarusian");
							dictLangs.Add("bn", "Bengali");
							dictLangs.Add("bs", "Bosnian");
							dictLangs.Add("bg", "Bulgarian");
							dictLangs.Add("ca", "Catalan");
							dictLangs.Add("ceb", "Cebuano");
							dictLangs.Add("ny", "Chichewa");
							dictLangs.Add("zh-CN", "Chinese (Simplified)");
							dictLangs.Add("zh", "Chinese (Simplified)");
							dictLangs.Add("zh-TW", "Chinese (Traditional)");
							dictLangs.Add("co", "Corsican");
							dictLangs.Add("hr", "Croatian");
							dictLangs.Add("cs", "Czech");
							dictLangs.Add("da", "Danish");
							dictLangs.Add("nl", "Dutch");
							dictLangs.Add("en", "English");
							dictLangs.Add("eo", "Esperanto");
							dictLangs.Add("et", "Estonian");
							dictLangs.Add("tl", "Filipino");
							dictLangs.Add("fi", "Finnish");
							dictLangs.Add("fr", "French");
							dictLangs.Add("fy", "Frisian");
							dictLangs.Add("gl", "Galician");
							dictLangs.Add("ka", "Georgian");
							dictLangs.Add("de", "German");
							dictLangs.Add("el", "Greek");
							dictLangs.Add("gu", "Gujarati");
							dictLangs.Add("ht", "Haitian Creole");
							dictLangs.Add("ha", "Hausa");
							dictLangs.Add("haw", "Hawaiian");
							dictLangs.Add("iw", "Hebrew");
							dictLangs.Add("hi", "Hindi");
							dictLangs.Add("hmn", "Hmong");
							dictLangs.Add("hu", "Hungarian");
							dictLangs.Add("is", "Icelandic");
							dictLangs.Add("ig", "Igbo");
							dictLangs.Add("id", "Indonesian");
							dictLangs.Add("ga", "Irish");
							dictLangs.Add("it", "Italian");
							dictLangs.Add("ja", "Japanese");
							dictLangs.Add("jw", "Javanese");
							dictLangs.Add("kn", "Kannada");
							dictLangs.Add("kk", "Kazakh");
							dictLangs.Add("km", "Khmer");
							dictLangs.Add("ko", "Korean");
							dictLangs.Add("ku", "Kurdish (Kurmanji)");
							dictLangs.Add("ky", "Kyrgyz");
							dictLangs.Add("lo", "Lao");
							dictLangs.Add("la", "Latin");
							dictLangs.Add("lv", "Latvian");
							dictLangs.Add("lt", "Lithuanian");
							dictLangs.Add("lb", "Luxembourgish");
							dictLangs.Add("mk", "Macedonian");
							dictLangs.Add("mg", "Malagasy");
							dictLangs.Add("ms", "Malay");
							dictLangs.Add("ml", "Malayalam");
							dictLangs.Add("mt", "Maltese");
							dictLangs.Add("mi", "Maori");
							dictLangs.Add("mr", "Marathi");
							dictLangs.Add("mn", "Mongolian");
							dictLangs.Add("my", "Myanmar (Burmese)");
							dictLangs.Add("ne", "Nepali");
							dictLangs.Add("no", "Norwegian");
							dictLangs.Add("ps", "Pashto");
							dictLangs.Add("fa", "Persian");
							dictLangs.Add("pl", "Polish");
							dictLangs.Add("pt", "Portuguese");
							dictLangs.Add("pa", "Punjabi");
							dictLangs.Add("ro", "Romanian");
							dictLangs.Add("ru", "Russian");
							dictLangs.Add("sm", "Samoan");
							dictLangs.Add("gd", "Scots Gaelic");
							dictLangs.Add("sr", "Serbian");
							dictLangs.Add("st", "Sesotho");
							dictLangs.Add("sn", "Shona");
							dictLangs.Add("sd", "Sindhi");
							dictLangs.Add("si", "Sinhala");
							dictLangs.Add("sk", "Slovak");
							dictLangs.Add("sl", "Slovenian");
							dictLangs.Add("so", "Somali");
							dictLangs.Add("es", "Spanish");
							dictLangs.Add("su", "Sundanese");
							dictLangs.Add("sw", "Swahili");
							dictLangs.Add("sv", "Swedish");
							dictLangs.Add("tg", "Tajik");
							dictLangs.Add("ta", "Tamil");
							dictLangs.Add("te", "Telugu");
							dictLangs.Add("th", "Thai");
							dictLangs.Add("tr", "Turkish");
							dictLangs.Add("uk", "Ukrainian");
							dictLangs.Add("ur", "Urdu");
							dictLangs.Add("uz", "Uzbek");
							dictLangs.Add("vi", "Vietnamese");
							dictLangs.Add("cy", "Welsh");
							dictLangs.Add("xh", "Xhosa");
							dictLangs.Add("yi", "Yiddish");
							dictLangs.Add("yo", "Yoruba");
							dictLangs.Add("zu", "Zulu");

							if (dictLangs.ContainsKey(Model.LanguageInput))
							{
								result = dictLangs[Model.LanguageInput];
							}
						}
						@result
						]]>
					</Compute.Expr>
					<JsonPath Expr="detectedSourceLanguage" Id="LanguageInput" Converter="String" DefaultValue=""/>
				</Compute>
				<JsonPath Expr="detectedSourceLanguage" Id="DetectedLanguageShort" Title="Detected Lang Shortcode" Converter="String" Checked="false"/>
      </JsonPath>
    </Parse>
    <Fail>
      <JsonPath Expr="error.message"/>
    </Fail>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    public string GetJson(){

			var dict = new Dictionary<string, string>();

			string[] lines = ((string)Model.Text).Trim().Split('\n').Where(e => !string.IsNullOrEmpty(e)).Take(100).ToArray();

      string json = "{\r\n";
			for (int i = 0; i < lines.Length; i++){
			 string ending = (i < (lines.Length -1) ? "," : "");
			 json += "\"q\" : \"" + Regex.Replace(lines[i], "<.*?>", String.Empty) + "\"" + ending + "\r\n";
			}
			json += "}";

			return json;
    }
    ]]>
  </RazorFunctions>

</Suite>