<?xml version="1.0" encoding="utf-8" ?>
<Suite Category="Email" Title="SendGrid" Id="SendGrid" RequireVersion="7.0" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/SendGrid.xml" HelpUrl="http://seotoolsforexcel.com/sendgrid/">

  <Author Name="Dovydas Meilunas" Url="https://github.com/dovydasm"/>

  <Settings HelpText="What's this?" HelpUrl="http://seotoolsforexcel.com/sendgrid/">
    <Text Id="ApiKey" Title="API Key" Required="true" HelpUrl="http://seotoolsforexcel.com/sendgrid/"/>
  </Settings>

  <Resources>
    <Resource Id="Headers">
      <HttpSettings>
        <RequestHeaders>
          <Header Name='Authorization'>Bearer @(Model.ApiKey)</Header>
        </RequestHeaders>
        <RequestContentType>application/json</RequestContentType>
      </HttpSettings>
    </Resource>
    <Resource Id="Fail">
      <Fail>
        <JsonPath Expr="$.errors.*."/>
      </Fail>
    </Resource>
  </Resources>

  <RestConnector Id="Alerts" Title="Alerts" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/alerts.html">
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/alerts
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="email_to" Id="EmailTo" Title="Email To" Converter="String"/>
        <JsonPath Expr="percentage" Id="Percentage" Title="Percentage" Converter="Auto"/>
        <JsonPath Expr="type" Id="Type" Title="Type" Converter="String"/>
        <JsonPath Expr="frequency" Id="Frequency" Title="Frequency" Converter="Auto"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created_at" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="UpdatedAt" Title="Updated" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="updated_at" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Blocks" Title="Blocks" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/blocks.html">
    <Parameters>
      <DateInterval Id="DateInterval" Title="Interval" Required="false" Nullabe="true"/>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/suppression/blocks?
        limit=@(Model.Limit)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &start_time=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &end_time=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="reason" Id="Reason" Title="Reason" Converter="String"/>
        <JsonPath Expr="status" Id="Status" Title="Status" Converter="String"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Bounces" Title="Bounces" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/bounces.html">
    <Parameters>
      <DateInterval Id="DateInterval" Title="Interval" Required="false" Nullabe="true"/>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/suppression/bounces?
        limit=@(Model.Limit)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &start_time=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &end_time=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="reason" Id="Reason" Title="Reason" Converter="String"/>
        <JsonPath Expr="status" Id="Status" Title="Status" Converter="String"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="InvalidEmails" Title="Invalid Emails" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/invalid_emails.html">
    <Parameters>
      <DateInterval Id="DateInterval" Title="Interval" Required="false" Nullabe="true"/>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/suppression/invalid_emails?
        limit=@(Model.Limit)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &start_time=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &end_time=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created" Id="Inp" Converter="Long"/>
        </Compute>
        <JsonPath Expr="email" Id="Email" Name="Email" Converter="String"/>
        <JsonPath Expr="reason" Id="Reason" Name="Reason" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="SpamReports" Title="Spam Reports" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/spam_reports.html">
    <Parameters>
      <DateInterval Id="DateInterval" Title="Interval" Required="false" Nullabe="true"/>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/suppression/spam_reports?
        limit=@(Model.Limit)
        @if(Model.DateInterval.StartDate != null && Model.DateInterval.EndDate != null)
        {
          @: &start_time=@(((DateTime)Model.DateInterval.StartDate).UnixTimeStampUtc())
          @: &end_time=@(((DateTime)Model.DateInterval.EndDate).UnixTimeStampUtc())
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created" Id="Inp" Converter="Long"/>
        </Compute>
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="ip" Id="Ip" Title="IP" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Campaigns" Title="Campaigns" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/campaigns.html#Get-all-Campaigns-GET">
    <Parameters>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/campaigns?
        limit=@(Model.Limit)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.result.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="int"/>
        <JsonPath Expr="title" Id="Title" Title="Title" Converter="String"/>
        <JsonPath Expr="subject" Id="Subject" Title="Subject" Converter="String"/>
        <JsonPath Expr="sender_id" Id="SenderId" Title="Sender ID" Converter="Int"/>
        <JsonPath Expr="categories" Id="Categories" Title="Categories" Converter="String"/>
        <JsonPath Expr="suppression_group_id" Id="SuppressionGroupId" Title="Suppression_group_id" Converter="Int"/>
        <JsonPath Expr="custom_unsubscribe_url" Id="CustomInsubscribUrl" Title="Custom Unsubscribe_url" Converter="String"/>
        <JsonPath Expr="ip_pool" Id="Ip_pool" Title="IP Pool" Converter="String"/>
        <JsonPath Expr="html_content" Id="Html_content" Title="Html Content" Converter="String" Checked="false"/>
        <JsonPath Expr="plain_content" Id="Plain_content" Title="Plain Content" Converter="String" Checked="false"/>
        <JsonPath Expr="editor" Id="Editor" Title="Editor" Converter="String"/>
        <JsonPath Expr="status" Id="Status" Title="Status" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EmailLists" Title="Email Lists" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-All-Lists-GET">
    <Parameters>
      <Number Id="Limit" Title="Limit" DefaultValue="500" Min="1" Max="500" Required="false" HelpText=""/>
    </Parameters>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/lists
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.lists.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="recipient_count" Id="RecipientCount" Title="Recipient Count" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="EmailListsHidden" Hidden="True" Title="Email Lists Hidden">
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/lists
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.lists.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="Int"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Recipients" Title="Recipients" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-GET">
    <Paging PageSize="1000" EvenPages="false" MaxTake="10000">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="$.recipient_count"/>
      </Parse>
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/recipients?=
        &page_size=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.recipients.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created_at" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="UpdatedAt" Title="Updated" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime" Checked="false">
          <JsonPath Expr="updated_at" Id="Inp" Converter="Long"/>
        </Compute>
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="first_name" Id="FirstName" Title="FirstName" Converter="String"/>
        <JsonPath Expr="last_name" Id="LastName" Title="LastName" Converter="String"/>
        <Compute Id="LastClicked" Title="Last Clicked" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_clicked" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastEmailed" Title="Last Emailed" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_emailed" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastOpened" Title="Last Opened" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_opened" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="RecipientsByList" Title="Recipients by List" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-on-a-List-GET">
    <Parameters>
      <Text Id="FilterList" Title="List ID" Select.Connector="EmailListsHidden" Select.IdField="Id" Select.TitleField="Name" Required="true" HelpText=""/>
    </Parameters>
    <Paging PageSize="1000" EvenPages="false" MaxTake="10000">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="$.recipient_count"/>
      </Parse>
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/recipients?
        list_id=@(Model.FilterList)
        &page_size=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.recipients.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created_at" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="UpdatedAt" Title="Updated" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime" Checked="false">
          <JsonPath Expr="updated_at" Id="Inp" Converter="Long"/>
        </Compute>
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="first_name" Id="FirstName" Title="FirstName" Converter="String"/>
        <JsonPath Expr="last_name" Id="LastName" Title="LastName" Converter="String"/>
        <Compute Id="LastClicked" Title="Last Clicked" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_clicked" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastEmailed" Title="Last Emailed" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_emailed" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastOpened" Title="Last Opened" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_opened" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="RecipientsBySegment" Title="Recipients by Segment" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-On-a-Segment-GET">
    <Parameters>
      <Text Id="FilterSegment" Title="List ID" Select.Connector="SegmentsHidden" Select.IdField="Id" Select.TitleField="Name" Required="true" HelpText=""/>
    </Parameters>
    <Paging PageSize="1000" EvenPages="false" MaxTake="10000">
      <Parse>
        <JsonPath Id="AvaliableRows" Expr="$.recipient_count"/>
      </Parse>
    </Paging>
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/recipients?
        segment_id=@(Model.FilterSegment)
        &page_size=@(Model.PageCursor.NextTake)
        @if(Model.PageCursor.Page != 0)
        {
          @: &page=@(Model.PageCursor.Page+1)
        }
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.recipients.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created_at" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="UpdatedAt" Title="Updated" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime" Checked="false">
          <JsonPath Expr="updated_at" Id="Inp" Converter="Long"/>
        </Compute>
        <JsonPath Expr="email" Id="Email" Title="Email" Converter="String"/>
        <JsonPath Expr="first_name" Id="FirstName" Title="First Name" Converter="String"/>
        <JsonPath Expr="last_name" Id="LastName" Title="Last Name" Converter="String"/>
        <Compute Id="LastClicked" Title="Last Clicked" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_clicked" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastEmailed" Title="Last Emailed" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_emailed" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="LastOpened" Title="Last Opened" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.Inp > 0)
            {
            @: @(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))
            }
            ]]>
          </Compute.Expr>
          <JsonPath Expr="last_opened" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="Segments" Title="Segments" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-All-Segments-GET">
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/segments
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.segments.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
        <JsonPath Expr="list_id" Id="ListId" Title="List Id" Converter="Auto"/>
        <JsonPath Expr="conditions" Id="Conditions" Title="Conditions" Converter="String" Checked="False"/>
        <JsonPath Expr="recipient_count" Id="RecipientCount" Title="Recipient Count" Converter="Int"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="SegmentsHidden" Hidden="True" Title="Segments Hidden">
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/contactdb/segments
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.segments.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="name" Id="Name" Title="Name" Converter="String"/>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

  <RestConnector Id="SenderIdentities" Title="Sender Identities" HelpUrl="https://sendgrid.com/docs/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-GET">
    <Fetch>
      <Resource Id="Headers"/>
      <Fetch.Url>
        <![CDATA[
        https://api.sendgrid.com/v3/senders
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <JsonPath Expr="$.*">
        <JsonPath Expr="id" Id="Id" Title="Id" Converter="String"/>
        <JsonPath Expr="nickname" Id="Nickname" Title="Nickname" Converter="String"/>
        <JsonPath Expr="from.email" Id="FromEmail" Title="From Email" Converter="String"/>
        <JsonPath Expr="from.name" Id="FromName" Title="From Name" Converter="String"/>
        <JsonPath Expr="to.email" Id="To Email" Title="To Email" Converter="String"/>
        <JsonPath Expr="to.name" Id="ToName" Title="To Name" Converter="String"/>
        <JsonPath Expr="address" Id="Address" Title="Address" Converter="String"/>
        <JsonPath Expr="address_2" Id="Address2" Title="Address 2" Converter="String"/>
        <JsonPath Expr="city" Id="City" Title="City" Converter="String"/>
        <JsonPath Expr="state" Id="State" Title="State" Converter="String"/>
        <JsonPath Expr="zip" Id="Zip" Title="Zip" Converter="String"/>
        <JsonPath Expr="country" Id="Country" Title="Country" Converter="String"/>
        <JsonPath Expr="verified" Id="Verified" Title="Verified" Converter="Bool"/>
        <JsonPath Expr="locked" Id="Locked" Title="" Converter="Int"/>
        <Compute Id="CreatedAt" Title="Created" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime">
          <JsonPath Expr="created_at" Id="Inp" Converter="Long"/>
        </Compute>
        <Compute Id="UpdatedAt" Title="Updated" Expr="@(DateTimeOffset.FromUnixTimeSeconds((long)Model.Inp))" Converter="DateTime" Checked="false">
          <JsonPath Expr="updated_at" Id="Inp" Converter="Long"/>
        </Compute>
      </JsonPath>
    </Parse>
    <Resource Id="Fail"/>
  </RestConnector>

</Suite>