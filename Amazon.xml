<?xml version="1.0" encoding="utf-8" ?>
<Suite RequireVersion="6.0" Title="Amazon" Id="Amazon" Category="Shopping &amp; Review Sites" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Amazon.xml" HelpUrl="http://seotoolsforexcel.com/amazon/" HelpText="Documentation">

  <Author Name="Niels Bosma" Url="https://se.linkedin.com/in/bosmaniels"/>

  <Resources>
    <Resource Id="Sortings">
      <Item Id="relevanceblender" Title="Relevance"/>
      <Item Id="price-asc-rank" Title="Price: Low to High"/>
      <Item Id="price-desc-rank" Title="Price: High to Low"/>
      <Item Id="review-rank" Title="Avg. Customer Review"/>
      <Item Id="date-desc-rank" Title="Newest Arrivals"/>
    </Resource>
    <Resource Id="Departments">
      <Item Id="aps" Title="All Departments"/>
      <Item Id="alexa-skills" Title="Alexa Skills"/>
      <Item Id="amazon-devices" Title="Amazon Devices"/>
      <Item Id="instant-video" Title="Amazon Video"/>
      <Item Id="warehouse-deals" Title="Amazon Warehouse Deals"/>
      <Item Id="appliances" Title="Appliances"/>
      <Item Id="mobile-apps" Title="Apps &amp; Games"/>
      <Item Id="arts-crafts" Title="Arts, Crafts &amp; Sewing"/>
      <Item Id="automotive" Title="Automotive Parts &amp; Accessories"/>
      <Item Id="baby-products" Title="Baby"/>
      <Item Id="beauty" Title="Beauty &amp; Personal Care"/>
      <Item Id="stripbooks" Title="Books"/>
      <Item Id="popular" Title="CDs &amp; Vinyl"/>
      <Item Id="mobile" Title="Cell Phones &amp; Accessories"/>
      <Item Id="fashion" Title="Fashion"/>
      <Item Id="fashion-womens" Title="Fashion - Women"/>
      <Item Id="fashion-mens" Title="Fashion - Men"/>
      <Item Id="fashion-girls" Title="Fashion - Girls"/>
      <Item Id="fashion-boys" Title="Fashion - Boys"/>
      <Item Id="fashion-baby" Title="Fashion - Baby"/>
      <Item Id="collectibles" Title="Collectibles &amp; Fine Art"/>
      <Item Id="computers" Title="Computers"/>
      <Item Id="courses" Title="Courses"/>
      <Item Id="financial" Title="Credit and Payment Cards"/>
      <Item Id="digital-music" Title="Digital Music"/>
      <Item Id="electronics" Title="Electronics"/>
      <Item Id="lawngarden" Title="Garden &amp; Outdoor"/>
      <Item Id="gift-cards" Title="Gift Cards"/>
      <Item Id="grocery" Title="Grocery &amp; Gourmet Food"/>
      <Item Id="handmade" Title="Handmade"/>
      <Item Id="hpc" Title="Health Household &amp; Baby Care"/>
      <Item Id="local-services" Title="Home &amp; Business Services"/>
      <Item Id="garden" Title="Home &amp; Kitchen"/>
      <Item Id="industrial" Title="Industrial &amp; Scientific"/>
      <Item Id="digital-text" Title="Kindle Store"/>
      <Item Id="fashion-luggage" Title="Luggage &amp; Travel Gear"/>
      <Item Id="luxury-beauty" Title="Luxury Beauty"/>
      <Item Id="magazines" Title="Magazine Subscriptions"/>
      <Item Id="movies-tv" Title="Movies &amp; TV"/>
      <Item Id="mi" Title="Musical Instruments"/>
      <Item Id="office-products" Title="Office Products"/>
      <Item Id="pets" Title="Pet Supplies"/>
      <Item Id="prime-exclusive" Title="Prime Exclusive Savings"/>
      <Item Id="pantry" Title="Prime Pantry"/>
      <Item Id="software" Title="Software"/>
      <Item Id="sporting" Title="Sports &amp; Outdoors"/>
      <Item Id="tools" Title="Tools &amp; Home Improvement"/>
      <Item Id="toys-and-games" Title="Toys &amp; Games"/>
      <Item Id="vehicles" Title="Vehicles"/>
      <Item Id="videogames" Title="Video Games"/>
    </Resource>
  </Resources>

  <RestConnector Id="Amazon" Title="Amazon">
    <Parameters>
      <Text Id="Query" Title="Query" Debug.DefaultValue="football" Required="true"/>
      <Text Id="Domain" Title="Domain" DefaultValue="amazon.com" Required="true"/>
      <Select Id="Department" Title="Department" Required="false" DefaultValue="aps">
        <DataSource>
          <Resource Id="Departments"/>
        </DataSource>
      </Select>
      <Select Id="Sort" Title="Sort Results by" Required="false" DefaultValue="relevanceblender">
        <DataSource>
          <Resource Id="Sortings"/>
        </DataSource>
      </Select>
      <Number Id="Delay" Title="Delay" DefaultValue="0" Min="0" Max="20000" Required="false" HelpText=""/>
    </Parameters>
    <Paging PageSize="15" EvenPages="false"/>
    <Fetch>
      <HttpSettings>
        <IntervalBetweenRequests RandomFrom="@(Model.Delay)" RandomTo="@(Model.Delay+10)" IfSame="Host"/>
      </HttpSettings>
      <Fetch.Url>
        <![CDATA[
        http://www.@(Model.Domain)/s?
        url=search-alias=@(Model.Department)
        &field-keywords=@(Utils.UrlEncode(Model.Query))
        &page=@(Model.PageCursor.Page+1)
        &sort=@(Model.Sort)
        ]]>
      </Fetch.Url>
    </Fetch>
    <Parse>
      <XPath Expr="//ul[contains(@@class,'s-result-list')]/li[descendant::span[contains(@@class,'-price')]]">
        <Compute Id="Url" Title="URL">
          <Compute.Expr>
            <![CDATA[
            @if(Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
            {
              @: https://www.amazon.com@(Model.UrlInput)
            }
            else if(!Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
            {
              @(Model.UrlInput)
            }
            else
            {
              @:
            }
            ]]>
          </Compute.Expr>
          <XPath Id="UrlInput" Expr=".//a[contains(@@class,'-link')]" Attribute="href"/>
        </Compute>
        <Compute Id="Type" Title="Type">
          <Compute.Expr>
            <![CDATA[
            @if(Model.UrlInput.Contains("/slredirect/") && Model.UrlInput is string)
            {
              @: Sponsored
            }
            else
            {
              @: Organic
            }
            ]]>
          </Compute.Expr>
          <XPath Id="UrlInput" Expr=".//a[contains(@@class,'-link')]" Attribute="href"/>
        </Compute>
        <XPath Id="Asin" Title="ASIN" Expr="." Attribute="data-asin" Converter="String"/>
        <XPath Id="Title" Title="Title" Expr=".//h2" />
        <XPath Id="Price" Title="Price" Expr=".//span[contains(@@class,'-price')]"/>
        <Compute Id="AverageReview" Title="Average Review" Converter="Auto">
          <Compute.Expr>
            <![CDATA[
            @if(Model.AverageReviewInput is string && Model.AverageReviewInput.Contains("out"))
            {
              @(Model.AverageReviewInput.Substring(0, Model.AverageReviewInput.IndexOf("out")))
            }
            else
            {
              @:
            }
            ]]>
          </Compute.Expr>
          <XPath Id="AverageReviewInput" Expr=".//i[contains(@@class,'a-icon a-icon-star a-star')]" Converter="String"/>
        </Compute>
        <XPath Id="Reviews" Title="Reviews" Expr=".//a[contains(@@href,'customerReviews')]" Converter="Int" DefaultValue="0"/>
        <XPath Id="Offers" Title="Offers" Expr=".//a[contains(@@href,'offer-listing')]/text()" Converter="Int" DefaultValue="0"/>
      </XPath>
    </Parse>
  </RestConnector>

</Suite>
